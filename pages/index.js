import Head from 'next/head'
import Navbar from '../components/Navbar'
import Footer from '../components/Footer'
import { LocomotiveScrollProvider } from 'react-locomotive-scroll'
import ReactFullpage from "@fullpage/react-fullpage";

import { useRef } from 'react'
import { SlideFour, SlideOne, SlideThree, SlideTwo } from '../components/HomeSlides'
export default function Home() {
  const containerRef = useRef(null)
  const pages = [
    <SlideOne key="1" />,
    <SlideTwo key="2" />,
    <SlideThree key="3" />,
    <SlideFour key="4" />,
  ]
  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <body className='bg-black'>
        <Navbar />
        <LocomotiveScrollProvider
          options={
            {
              smooth: true,
              // ... all available Locomotive Scroll instance options 
            }
          }
          watch={
            [
              //..all the dependencies you want to watch to update the scroll.
              //  Basicaly, you would want to watch page/location changes
              //  For exemple, on Next.js you would want to watch properties like `router.asPath` (you may want to add more criterias if the instance should be update on locations with query parameters)
            ]
          }
          containerRef={containerRef}
        >
          <main data-scroll-container ref={containerRef}>
            <ReactFullpage
              navigation
              scrollingSpeed={1000} /* Options here */
              scrollHorizontally={true}  /* Because we are using the extension */
              render={comp =>
                {console.log(comp)
                return (
                  <ReactFullpage.Wrapper>
                    {pages.map(page => { return page })}
                  </ReactFullpage.Wrapper>
                )}
              }
            />
          </main >
        </LocomotiveScrollProvider >

      </body>

    </div>
  )
}
